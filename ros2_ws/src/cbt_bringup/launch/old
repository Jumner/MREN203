from launch import LaunchDescription
from launch_ros.actions import Node
from launch.actions import IncludeLaunchDescription
from launch_ros.substitutions import FindPackageShare
from launch.launch_description_sources import PythonLaunchDescriptionSource

def generate_launch_description():
    ld = LaunchDescription("""[
        IncludeLaunchDescription([
            PythonLaunchDescriptionSource([
                FindPackageShare('sllidar_ros2'), 'launch', 'sllidar_a1_launch.py'])
            ]),
        IncludeLaunchDescription([
            PythonLaunchDescriptionSource([
                FindPackageShare('nav2_bringup'), 'launch', 'navigation_launch.py'])
            ]),
        ]""")

    lidar_transform = Node(
            package="tf2_ros",
            executable="static_transform_publisher",
            arguments=["0", "0", "0", "0", "0", "1", "0", "base_link", "laser"],
            )

    robot_driver = Node(
        package="robot_driver",
        executable="robot_driver",
        )

    slam = Node(
        package="slam_toolbox",
        executable="sync_slam_toolbox_node",
        parameters=[
            {"base_frame": "base_link", "max_laser_range": "5.0"},
            ]
        )

    ld.add_action(lidar_transform)
    ld.add_action(robot_driver)
    ld.add_action(slam)
    return ld
